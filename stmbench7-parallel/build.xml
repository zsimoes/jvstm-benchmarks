<?xml version="1.1"?>
<project name="stmbench7" default="compile" basedir=".">
<taskdef resource="net/sf/antcontrib/antlib.xml">
  <classpath>
    <pathelement location="/home/nmld/jose-pereira/ant-contrib-1.0b3.jar"/>
  </classpath>
</taskdef>
	
	<property name="version" value="1.2" />
	<property name="benchname" value="stmbench7-${version}" />
	
	<property name="build.dir" value="classes" />
	<property name="java.src.dir" value="src" />
	<property name="dist.dir" value="dist" />
	<property name="lib.dir" location="lib"/>
	<property name="libs.dir" value="lib"/>

	<!-- CONFIG -->
	<property name="MIN_HEAP" value="2G"/>
	<property name="MAX_HEAP" value="3G"/>
	<property name="iterations"	value="3"/>
	<property name="subthreads"	value="3"/>
	<property name="threads"	value="2 4 8"/>
	<property name="threadsonly"	value="2 3 6 12 24"/>
	
	<property name="javart.home" value="SET_PATH_TO_rt.jar" />
	<property name="agent" value="${lib.dir}/deuceAgent.jar" />
	<property name="precompiler" value="${lib.dir}/SET_PRECOMPILER_TO_tmjava.jar" />
	<!-- END_CONFIG -->

	<path id="project.class.path">
		<pathelement path="${build.dir}"/>
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<target name="-init" >
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>

	<target name="clean-all" description="Removes any generated files">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
	</target>

	<target name="compile" depends="-init, -libs" description="Compiles STMbench7">
		<antcall target="-compile-libs"/>
		<antcall target="-compile-no-libs"/>
	</target>

	<target name="-compile-libs" if="jvstm.present">
		<javac destdir="${build.dir}" extdirs="${lib.dir}" debug="true"	deprecation="true" debuglevel="lines,vars,source">
			<compilerarg value="-Xlint:unchecked"/>
			<src path="${java.src.dir}"/>
			<exclude name="stmbench7/test/**/*.java" />
			<classpath refid="project.class.path"/>
		</javac>
	</target>

	<target name="-compile-no-libs" unless="jvstm.present">
		<fail message="jvstm.jar not found in libs dir: ${lib.dir}"/>
	</target>

	<target name="-libs"> 
		<available file="${lib.dir}/jvstm.jar" property="jvstm.present"/>
	</target>

	<target name="jar" depends="compile" description="Java-archive STMbench7">
		<jar basedir="${build.dir}" destfile="${dist.dir}/${benchname}.jar">
			<manifest>
				<attribute name="Main-Class" value="stmbench7.Benchmark" />
			</manifest>
		</jar>
	</target>

	<target name="instrument-rt" description="Instrument the runtime classes">
		<java fork="true" classpath="${agent}" classname="org.deuce.transform.asm.Agent">
			<jvmarg value="-Dorg.deuce.exclude=java.lang.Enum,sun.*" />
			<arg line="${javart.home}/rt.jar ${dist.dir}/rt_instrumented.jar" />
		</java>
	</target>

	<target name="instrument" depends="jar" description="Instrument the benchmark">
		<java  fork="true" classpath="${agent}" classname="org.deuce.transform.asm.Agent">
			<jvmarg value="-Dorg.deuce.exclude=java.lang.Enum,sun.*" />
			<arg line="${dist.dir}/${benchname}.jar ${dist.dir}/${benchname}_instrumented.jar" />
		</java>
	</target>

	<target name="tmjava">
		<java  classname="tm.TMJavaParser" fork="true" resultproperty="java.result">
			<arg line="-sourcepath ${java.src.dir}/stmbench7:."/>
			<arg line="-e ${java.src.dir}/stmbench7/test/backend/IndexTest.java"/>
			<arg line="${java.src.dir}/stmbench7"/>
			<classpath>
				<pathelement location="${precompiler}"/> 
				<pathelement location="${agent}"/>
				<pathelement location="."/>
			</classpath>
		</java>
	</target>

	<target name="test" depends="instrument,instrument-rt" description="Run deuce STM test">
		<java fork="true" classname="stmbench7.Benchmark">
			<jvmarg value="-Dorg.deuce.exclude=java.lang.Enum,sun.*" /> 
			<jvmarg value="-Dorg.deuce.transaction.contextClass=org.deuce.transaction.lsa.Context" />
			<jvmarg value="-Xbootclasspath/p:${dist.dir}/rt_instrumented.jar:${agent}:${dist.dir}/${benchname}_instrumented.jar" />
			<arg line="-l 1 -t 16 -w r --seq-replay -g stm --no-traversals -s stmbench7.impl.deucestm.DeuceSTMInitializer" />
		</java>  
	</target>


	<target name="-run" depends="compile, -testArgs">
		<antcall target="-run-args"/>
		<antcall target="-run-no-args"/>
	</target>

	<target name="-testArgs">
		<condition property="args.set">
      			<not><equals arg1="${args}" arg2="$${args}"/></not>
		</condition>
	</target>

	<target name="-run-args" if="args.set">
		<java classname="stmbench7.Benchmark" fork="true" jvm="${libs.dir}/openjdk-continuation-vm2013-linux-amd64/bin/java">
			<classpath refid="project.class.path"/>
			<jvmarg value="-Xms${MIN_HEAP}" />
			<jvmarg value="-Xmx${MAX_HEAP}" />
			<arg line="${synch} ${args}"/>
		</java>
	</target>

	<target name="-run-no-args" unless="args.set">		
		<java classname="stmbench7.Benchmark" fork="true" jvm="${libs.dir}/openjdk-continuation-vm2013-linux-amd64/bin/java">
			<classpath refid="project.class.path"/>
			<jvmarg value="-Xms${MIN_HEAP}" />
			<jvmarg value="-Xmx${MAX_HEAP}" />
			<arg line="${synch}"/>
		</java>
	</target>

	<target name="run-coarse" description="Runs the benchmark with coarse-grained locking">
		<antcall target="-run">
			<param name="synch" value="-g coarse"/>
		</antcall>
	</target>

	<target name="run-medium" description="Runs the benchmark with medium-grained locking">
		<antcall target="-run">
			<param name="synch" value="-g medium"/>
		</antcall>
	</target>

	<target name="run-jvstm-parallel" description="Runs the benchmark with the jvstm">
		<for list="${subthreads}" delimiter=" " param="nsubthreads" trim="false" parallel="false">
		<sequential>
		<echo file="result.txt" append="true">1-@{nsubthreads},</echo>
		<for list="${iterations}" delimiter=" " param="iteration" trim="false" parallel="false">
		<sequential>
		<antcall target="-run">
			<param name="synch" value="--seq-replay -futures @{nsubthreads} --parNest -t 1 --ops 21 --no-sms -w r -g stm -s stmbench7.impl.jvstm.JVSTMInitializer"/>
		</antcall>
		</sequential>
		</for>
		<echo file="result.txt" append="true">&#x0A;</echo>
		</sequential>
		</for>
		<for list="${threads}" delimiter=" " param="nthreads" trim="false" parallel="false">
		<sequential>
		<echo file="result.txt" append="true">@{nthreads}-3,</echo>
		<for list="${iterations}" delimiter=" " param="iteration" trim="false" parallel="false">
		<sequential>
		<antcall target="-run">
			<param name="synch" value="--seq-replay -futures 3 --parNest -t @{nthreads} --ops 800 --no-sms -w r -g stm -s stmbench7.impl.jvstm.JVSTMInitializer"/>
		</antcall>
		</sequential>
		</for>
		<echo file="result.txt" append="true">&#x0A;</echo>	
		</sequential>
		</for>	
	</target>


	<target name="run-jvstm" description="Runs the benchmark with the jvstm">
		<for list="${threadsonly}" delimiter=" " param="nthreads" trim="false" parallel="false">
		<sequential>
		<for list="${iterations}" delimiter=" " param="iteration" trim="false" parallel="false">
		<sequential>
		<antcall target="-run">
			<param name="synch" value="--seq-replay -t @{nthreads} --ops 800 --no-sms -w r -g stm -s stmbench7.impl.jvstm.JVSTMInitializer"/>
		</antcall>
		</sequential>
		</for>
		<echo file="result.txt" append="true">&#x0A;</echo>
		</sequential>
		</for>	
	</target>
</project>
