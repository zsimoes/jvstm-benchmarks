<?xml version="1.1"?>
<project name="stmbench7" default="compile" basedir=".">

	<property name="version" value="1.2" />
	<property name="basedir_white" value="C:\\Users\\Ze\\GOOGLE~1\\GitHub\\jvstm-benchmarks\\sb7-java-v1.2" />
	<property name="src.home" value="${basedir_white}/src" />
	<property name="build.home" value="${basedir_white}/build" />
	<property name="dist.home" value="${basedir_white}/dist" />
	<property name="lib.home" value="${basedir_white}/lib" />
	<property name="lib.dir" location="lib" />
	<property name="benchname" value="stmbench7-VELOX-${version}" />
		
	<property name="ant.build.javac.source" value="1.5"/>
	<property name="ant.build.javac.target" value="1.5"/>
	<property name="jvstm.lib" value="${lib.home}/jvstm.jar"/>
	
	<property name="agent" value="../Deuce_1.3_optimized_Feature_Freeze_3/bin/deuceAgent.jar" />
	<property name="precompiler" value="SET_PRECOMPILER_TO_tmjava.jar" />
	<property name="javart.home" value="C:\\PROGRA~1\\Java\\jdk1.8.0_25\\jre\\lib" />

	<property name="MIN_HEAP" value="1G" />
	<property name="MAX_HEAP" value="2G" />

	<path id="project.class.path">
		<pathelement path="${build.dir}" />
		<fileset dir="${lib.home}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="clean" description="Delete old build and dist directories">
		<delete dir="${build.home}" />
		<delete dir="${dist.home}" />
		<delete dir="generated" />
	</target>

	<target name="init" description="Create build dir">
		<mkdir dir="${build.home}" />
	</target>

	<target name="init-jar" description="Create build dir">
		<mkdir dir="${lib.home}" />
	</target>

	<target name="compile" depends="init" description="Compile STMbench7">
		<javac srcdir="${src.home}" destdir="${build.home}" includeantruntime="false">
			<classpath refid="project.class.path" />
			<exclude name="stmbench7/test/**/*.java" />
		</javac>
	</target>

	<target name="jar" depends="compile,init-jar" description="Java-archive STMbench7">
		<jar basedir="${build.home}" destfile="${lib.home}/${benchname}.jar">
			<manifest>
				<attribute name="Main-Class" value="stmbench7.Benchmark" />
			</manifest>
		</jar>
	</target>

	<target name="dist" depends="jar" description="Generate distribution">
		<mkdir dir="${dist.home}/${benchname}" />
		<copy todir="${dist.home}/${benchname}">
			<fileset dir="${basedir}">
				<include name="src/**/*.java" />
				<include name="build.xml" />
				<include name="COPYING" />
				<include name="${benchname}.jar" />
			</fileset>
		</copy>
		<tar basedir="${dist.home}" compression="gzip" destfile="${benchname}.tgz" />
		<delete dir="${dist.home}" />
	</target>

	<target name="instrument-rt" depends="init-jar" description="Instrument the runtime classes">
		<java fork="true" classpath="${agent}" classname="org.deuce.transform.asm.Agent">
			<jvmarg value="-Dorg.deuce.exclude=java.lang.Enum,sun.*" />
			<arg line="${javart.home}/rt.jar ${lib.home}/rt_instrumented.jar" />
		</java>
	</target>

	<target name="instrument" depends="jar" description="Instrument the benchmark">
		<java fork="true" classpath="${agent}" classname="org.deuce.transform.asm.Agent">
			<jvmarg value="-Dorg.deuce.exclude=java.lang.Enum,sun.*" />
			<arg line="${lib.home}/${benchname}.jar ${lib.home}/${benchname}_instrumented.jar" />
		</java>
	</target>

	<target name="tmjava" depends="init">
		<java classname="tm.TMJavaParser" fork="true" resultproperty="java.result">
			<arg line="-sourcepath ${src.home}/stmbench7:." />
			<arg line="-e ${src.home}/stmbench7/test/backend/IndexTest.java" />
			<arg line="${src.home}/stmbench7" />
			<classpath>
				<pathelement location="${precompiler}" />
				<pathelement location="${agent}" />
				<pathelement location="." />
			</classpath>
		</java>
	</target>

	<target name="test" depends="instrument,instrument-rt" description="Run test">
		<java fork="true" classname="stmbench7.Benchmark">
			<jvmarg value="-Dorg.deuce.exclude=java.lang.Enum,sun.*" />
			<jvmarg value="-Dorg.deuce.transaction.contextClass=org.deuce.transaction.lsa.Context" />
			<jvmarg value="-Xbootclasspath/p:${lib.home}/rt_instrumented.jar:${agent}:${lib.home}/${benchname}_instrumented.jar" />
			<arg line="-l 1 -t 16 -w rw -g stm --no-traversals -s stmbench7.impl.deucestm.DeuceSTMInitializer" />
		</java>
	</target>

	<target name="-run" depends="compile, -testArgs">
		<antcall target="-run-args" />
		<antcall target="-run-no-args" />
	</target>

	<target name="-testArgs">
		<condition property="args.set">
			<not>
				<equals arg1="${args}" arg2="$${args}" />
			</not>
		</condition>
	</target>

	<target name="-run-args" if="args.set">
		<java classname="stmbench7.Benchmark" fork="true">
			<classpath refid="project.class.path" />
			<jvmarg value="-Xms${MIN_HEAP}" />
			<jvmarg value="-Xmx${MAX_HEAP}" />
			<arg line="${synch} ${args}" />
		</java>
	</target>

	<target name="-run-no-args" unless="args.set">
		<java classname="stmbench7.Benchmark" fork="true">
			<classpath refid="project.class.path" />
			<jvmarg value="-Xms${MIN_HEAP}" />
			<jvmarg value="-Xmx${MAX_HEAP}" />
			<arg line="${synch}" />
		</java>
	</target>

	<target name="run-coarse" description="Runs the benchmark with coarse-grained locking">
		<antcall target="-run">
			<param name="synch" value="-g coarse" />
		</antcall>
	</target>

	<target name="run-medium" description="Runs the benchmark with medium-grained locking">
		<antcall target="-run">
			<param name="synch" value="-g medium" />
		</antcall>
	</target>

	<target name="run-jvstm" description="Runs the benchmark with the jvstm">
		<antcall target="-run">
			<param name="synch" value="-g stm -s stmbench7.impl.jvstm.JVSTMInitializer" />
		</antcall>
	</target>

</project>
